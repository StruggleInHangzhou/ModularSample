apply plugin: 'com.android.library'
apply from: "maven.gradle"
//apply plugin: 'maven'

//def projectName = project.getName()

android {
    compileSdkVersion Integer.parseInt(COMPILE_SDK_VERSION)
    buildToolsVersion BUILDTOOLS_VERSION

    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }

    defaultConfig {
        minSdkVersion Integer.parseInt(MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(TARGET_SDK_VERSION)
        versionCode Integer.parseInt(HTTP_VERSION)
        versionName HTTP_VERSION_NAME

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofitConverterGsonVersion"
    compile "com.squareup.retrofit2:converter-scalars:$rootProject.retrofitConverterScalarVersion"
    compile "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitAdapterRxjava2Version"
    compile "com.xy.hjh:basetools:$rootProject.hjhVersion"

}

//uploadArchives {
//    configuration = configurations.archives
//    repositories {
//        mavenDeployer {
//            repository(url: MAVEN_REPO_URL) {
//                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
//            }
//            pom.project {
//                version HTTP_VERSION_NAME
//                artifactId projectName
//                groupId GROUP_ID
//                packaging TYPE
//                description DESCRIPTION
//            }
//        }
//    }
//}
//
//artifacts {
//    archives file(projectName + ".aar")
//}

